{"ast":null,"code":"var _jsxFileName = \"E:\\\\Polinema MatKul-Sem6\\\\Pemrogramanan Berbasis Framework\\\\react-hoc\\\\src\\\\LoadDemo\\\\LoaderDemo.jsx\";\nimport React, { Component } from 'react';\nimport LoadIndicator from './LoaderHOC.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoaderDemo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      searchResults: [],\n      contactList: []\n    };\n    this.handleUserInput = this.handleUserInput.bind(this);\n  }\n\n  handleUserInput(inputText) {\n    this.setState({\n      searchText: inputText\n    }, () => console.log(this.state));\n  }\n\n  componentWillMount() {\n    let init = {\n      method: 'GET',\n      headers: new Headers(),\n      mode: 'cors',\n      cache: 'default'\n    };\n    fetch('https://demo4718771.mockable.io/users', init).then(response => response.json()).then(data => {\n      console.log(data);\n      this.setState({\n        contactList: [...data.contacts]\n      });\n    });\n  }\n\n  render() {\n    const ContactListWithLoadIndicator = LoadIndicator('contacts')(ContactList);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contactApp\",\n      children: /*#__PURE__*/_jsxDEV(ContactListWithLoadIndicator, {\n        contacts: this.state.contactList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst ContactList = _ref => {\n  let {\n    contacts\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: contact.photo,\n          width: \"100px\",\n          height: \"100px\",\n          alt: \"presentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contactData\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: contact.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: contact.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\" \", contact.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), console.log(contact)]\n      }, contact.email, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ContactList;\nexport default LoaderDemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["E:/Polinema MatKul-Sem6/Pemrogramanan Berbasis Framework/react-hoc/src/LoadDemo/LoaderDemo.jsx"],"names":["React","Component","LoadIndicator","LoaderDemo","constructor","props","state","searchText","searchResults","contactList","handleUserInput","bind","inputText","setState","console","log","componentWillMount","init","method","headers","Headers","mode","cache","fetch","then","response","json","data","contacts","render","ContactListWithLoadIndicator","ContactList","map","contact","photo","name","email","phone"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,aAAa,EAAE,EAFN;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AAEH;;AACDD,EAAAA,eAAe,CAACE,SAAD,EAAY;AACvB,SAAKC,QAAL,CAAc;AACVN,MAAAA,UAAU,EAAEK;AADF,KAAd,EAEG,MAAME,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB,CAFT;AAGH;;AACDU,EAAAA,kBAAkB,GAAG;AACjB,QAAIC,IAAI,GAAG;AACPC,MAAAA,MAAM,EAAE,KADD;AAEPC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,EAFF;AAGPC,MAAAA,IAAI,EAAE,MAHC;AAIPC,MAAAA,KAAK,EAAE;AAJA,KAAX;AAMAC,IAAAA,KAAK,CAAC,uCAAD,EAA0CN,IAA1C,CAAL,CACKO,IADL,CACWC,QAAD,IAAeA,QAAQ,CAACC,IAAT,EADzB,EAEKF,IAFL,CAGSG,IAAD,IAAU;AACNb,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AAAmB,WAAKd,QAAL,CAAc;AAC7BJ,QAAAA,WAAW,EAAE,CAAC,GAAGkB,IAAI,CAACC,QAAT;AADgB,OAAd;AAItB,KART;AAUH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,4BAA4B,GAAG5B,aAAa,CAAC,UAAD,CAAb,CAA0B6B,WAA1B,CAArC;AACA,wBAAQ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BAEJ,QAAC,4BAAD;AAA8B,QAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWG;AAAnD;AAAA;AAAA;AAAA;AAAA;AAFI;AAAA;AAAA;AAAA;AAAA,YAAR;AAKH;;AA1C8B;;AA4CnC,MAAMsB,WAAW,GAAG,QAAkB;AAAA,MAAjB;AAAEH,IAAAA;AAAF,GAAiB;AAClC,sBACI;AAAA,2BAEI;AAAA,gBACKA,QAAQ,CAACI,GAAT,CACIC,OAAD,iBAAa;AAAA,gCAET;AAAK,UAAA,GAAG,EAAEA,OAAO,CAACC,KAAlB;AAAyB,UAAA,KAAK,EAAC,OAA/B;AAAuC,UAAA,MAAM,EAAC,OAA9C;AAAsD,UAAA,GAAG,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAFS,eAGT;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAA,sBAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAQF,OAAO,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFJ,oBAEmC;AAAA;AAAA;AAAA;AAAA,kBAFnC,eAEyC;AAAA,4BAASH,OAAO,CAACI,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHS,EAQRvB,OAAO,CAACC,GAAR,CAAYkB,OAAZ,CARQ;AAAA,SAASA,OAAO,CAACG,KAAjB;AAAA;AAAA;AAAA;AAAA,cADhB;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CApBD;;KAAML,W;AAqBN,eAAe5B,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport LoadIndicator from './LoaderHOC.jsx';\r\n\r\nclass LoaderDemo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchText: '',\r\n            searchResults: [],\r\n            contactList: []\r\n        }\r\n        this.handleUserInput = this.handleUserInput.bind(this);\r\n\r\n    }\r\n    handleUserInput(inputText) {\r\n        this.setState({\r\n            searchText: inputText,\r\n        }, () => console.log(this.state))\r\n    }\r\n    componentWillMount() {\r\n        let init = {\r\n            method: 'GET',\r\n            headers: new Headers(),\r\n            mode: 'cors',\r\n            cache: 'default'\r\n        };\r\n        fetch('https://demo4718771.mockable.io/users', init)\r\n            .then((response) => (response.json()))\r\n            .then(\r\n                (data) => {\r\n                    console.log(data); this.setState({\r\n                        contactList: [...data.contacts]\r\n                    }\r\n                    )\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        const ContactListWithLoadIndicator = LoadIndicator('contacts')(ContactList);\r\n        return (<div className=\"contactApp\">\r\n\r\n            <ContactListWithLoadIndicator contacts={this.state.contactList} />\r\n        </div>\r\n        )\r\n    }\r\n}\r\nconst ContactList = ({ contacts }) => {\r\n    return (\r\n        <div>\r\n\r\n            <ul>\r\n                {contacts.map(\r\n                    (contact) => <li key={contact.email}>\r\n\r\n                        <img src={contact.photo} width=\"100px\" height=\"100px\" alt=\"presentation\" />\r\n                        <div className=\"contactData\">\r\n                            <h4>{contact.name}</h4>\r\n                            <small>{contact.email}</small> <br /><small> {contact.phone}</small\r\n                            >\r\n                        </div>\r\n                        {console.log(contact)}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default LoaderDemo;"]},"metadata":{},"sourceType":"module"}