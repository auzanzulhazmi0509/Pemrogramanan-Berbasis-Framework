{"ast":null,"code":"var _jsxFileName = \"E:\\\\Polinema MatKul-Sem6\\\\Pemrogramanan Berbasis Framework\\\\Modul_7\\\\modul_7\\\\src\\\\GenericContainer\\\\GenericContainerHOC.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GenericContainer = _ref => {\n  let {\n    reqUrl,\n    reqMethod,\n    resName\n  } = _ref;\n  return WrappedComponent => {\n    return class GenericContainer extends Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          [resName]: []\n        };\n      }\n\n      componentWillMount() {\n        let init = {\n          method: reqMethod,\n          headers: new Headers(),\n          mode: 'cors',\n          cache: 'default'\n        };\n        fetch(reqUrl, init).then(response => response.json()).then(data => {\n          this.setState({\n            [resName]: [...data.contacts]\n          });\n        });\n      }\n\n      render() {\n        return /*#__PURE__*/_jsxDEV(WrappedComponent, { ...this.props,\n          ...this.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this);\n      }\n\n    };\n  };\n};\n\nexport default GenericContainer;","map":{"version":3,"sources":["E:/Polinema MatKul-Sem6/Pemrogramanan Berbasis Framework/Modul_7/modul_7/src/GenericContainer/GenericContainerHOC.jsx"],"names":["React","Component","GenericContainer","reqUrl","reqMethod","resName","WrappedComponent","constructor","props","state","componentWillMount","init","method","headers","Headers","mode","cache","fetch","then","response","json","data","setState","contacts","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,gBAAgB,GAAG;AAAA,MAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA;AAArB,GAAD;AAAA,SAAoCC,gBAAgB,IAAI;AAC7E,WAAO,MAAMJ,gBAAN,SAA+BD,SAA/B,CAAyC;AAC5CM,MAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,cAAMA,KAAN;AACA,aAAKC,KAAL,GAAa;AACT,WAACJ,OAAD,GAAW;AADF,SAAb;AAIH;;AACDK,MAAAA,kBAAkB,GAAG;AACjB,YAAIC,IAAI,GAAG;AACPC,UAAAA,MAAM,EAAER,SADD;AAEPS,UAAAA,OAAO,EAAE,IAAIC,OAAJ,EAFF;AAGPC,UAAAA,IAAI,EAAE,MAHC;AAIPC,UAAAA,KAAK,EAAE;AAJA,SAAX;AAMAC,QAAAA,KAAK,CAACd,MAAD,EAASQ,IAAT,CAAL,CACKO,IADL,CACWC,QAAD,IAAeA,QAAQ,CAACC,IAAT,EADzB,EAEKF,IAFL,CAGSG,IAAD,IAAU;AACN,eAAKC,QAAL,CAAc;AACV,aAACjB,OAAD,GAAW,CAAC,GAAGgB,IAAI,CAACE,QAAT;AADD,WAAd;AAGH,SAPT;AAWH;;AACDC,MAAAA,MAAM,GAAG;AACL,4BACI,QAAC,gBAAD,OAAsB,KAAKhB,KAA3B;AAAA,aAAsC,KAAKC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAEH;;AA9B2C,KAAhD;AAgCH,GAjCwB;AAAA,CAAzB;;AAkCA,eAAeP,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nconst GenericContainer = ({ reqUrl, reqMethod, resName }) => WrappedComponent => {\r\n    return class GenericContainer extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                [resName]: [],\r\n\r\n            }\r\n        }\r\n        componentWillMount() {\r\n            let init = {\r\n                method: reqMethod,\r\n                headers: new Headers(),\r\n                mode: 'cors',\r\n                cache: 'default'\r\n            };\r\n            fetch(reqUrl, init)\r\n                .then((response) => (response.json()))\r\n                .then(\r\n                    (data) => {\r\n                        this.setState({\r\n                            [resName]: [...data.contacts]\r\n                        })\r\n                    }\r\n                )\r\n\r\n\r\n        }\r\n        render() {\r\n            return (\r\n                <WrappedComponent {...this.props} {...this.state} />)\r\n        }\r\n    }\r\n}\r\nexport default GenericContainer;"]},"metadata":{},"sourceType":"module"}